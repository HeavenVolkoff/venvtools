## More info:
# https://setuptools.readthedocs.io/en/latest/setuptools.html
# https://packaging.python.org/guides/distributing-packages-using-setuptools
# https://www.python.org/dev/peps/pep-0345/#metadata-version

[venv]
extras =
    dev

[metadata]
url = https://github.com/HeavenVolkoff/venvtools
name = venvtools
author = Vítor Vasconcellos
version = 0.0.4
license = BSD-3-Clause
keywords =
    venv
    command
    distutils
    setuptools
maintainer = Vítor Vasconcellos
description = A simple setuptools command to help with virtualenv
classifiers =
    Framework :: Setuptools Plugin
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    License :: OSI Approved :: BSD License :: 3-Clause "New" or "Revised" License (BSD-3-Clause)
    # https://pypi.org/pypi?%3Aaction=list_classifiers
download_url = https://pypi.org/project/venvtools/
project_urls =
    Bug Tracker = https://github.com/HeavenVolkoff/venvtools/issues
    Source Code = https://github.com/HeavenVolkoff/venvtools
author_email = vasconcellos.dev@gmail.com
maintainer_email = vasconcellos.dev@gmail.com
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]
# bool
zip_safe = True
    # Indicates whether your package is able to be run from within a zip archive or not
# list-semi
setup_requires =
    pip >= 18.1, != 19.0
    setuptools >= 40.1.0
    # List all packages required in order to run your package's setup.py
# str
python_requires = >3.3
    # Define the required python interpreter version to run you package
# list-semi
install_requires =
    pip >= 18.1, != 19.0
    setuptools >= 40.1.0
    importlib_metadata
# bool
include_package_data = False
    # Automatically include in your package any data file declared inside MANIFEST.in
    # If possible, it is recommended to use package_data and exclude_package_data instead

# Define executable entry-points to this package
[options.entry_points]
distutils.commands =
    venv = venvtools.virtual_env_command:VirtualEnvCommand
    # baz = my_package:dist_util_command_class

# Configure find: and find_namespace:
[options.packages.find]
where = src

# Put data files inside package
[options.package_data]
* = py.typed
# package_name = files_pattern, ...

# Extra dependencies, can be installed with: `pip install package[extra]`
[options.extras_require]
# extra_name = requirements, ...
dev =
    twine
    black
    isort
    venvtools
    # Put your development requirements here
docs =
    # Put your documentation requirements here
tests =
    # Put your tests requirements here
